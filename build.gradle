plugins {
    id 'fabric-loom' version '0.6.13'
    id 'maven-publish'
    id 'com.matthewprenger.cursegradle' version '1.4.0'
}

sourceCompatibility = JavaVersion.VERSION_1_8
targetCompatibility = JavaVersion.VERSION_1_8

setArchivesBaseName "${project.mod_artifact}-mc${project.minecraft_version}"

version = project.mod_version
group = project.mod_group

repositories {
    //Repository for HWYLA
    maven { url "https://maven.tehnut.info" }
}

dependencies {
    // minecraft fabric versions for mappings
    minecraft "com.mojang:minecraft:${project.minecraft_version}"
    mappings "net.fabricmc:yarn:${project.yarn_mappings}:v2"
    modImplementation "net.fabricmc:fabric-loader:${project.loader_version}"

    // fabric api version
    modImplementation "net.fabricmc.fabric-api:fabric-api:${project.fabric_version}"

    // additional mods for api compat
    modImplementation "mcp.mobius.waila:Hwyla:${hwyla_version}"

    // additional mods for runtime checks
    modRuntime "com.terraformersmc:traverse:3.2.0+build.17"

    implementation 'org.jetbrains:annotations:20.1.0'
}

processResources {
    inputs.property "version", project.version

    from(sourceSets.main.resources.srcDirs) {
        include "fabric.mod.json"
        expand(
                "version": project.version,
                "minecraft_version": project.minecraft_version
        )
    }

    from(sourceSets.main.resources.srcDirs) {
        exclude "fabric.mod.json"
    }
}

// ensure that the encoding is set to UTF-8, no matter what the system default is
// this fixes some edge cases with special characters not displaying correctly
// see http://yodaconditions.net/blog/fix-for-java-file-encoding-problems-with-gradle.html
tasks.withType(JavaCompile) {
    options.encoding = "UTF-8"
}

// Loom will automatically attach sourcesJar to a RemapSourcesJar task and to the "build" task
// if it is present.
// If you remove this task, sources will not be generated.
task sourcesJar(type: Jar, dependsOn: classes) {
    classifier = "sources"
    from sourceSets.main.allSource
}

jar {
    from "LICENSE"
}

// configure the maven publication
publishing {
    publications {
        mavenJava(MavenPublication) {
            // add all the jars that should be included when publishing to maven
            artifact(remapJar) {
                builtBy remapJar
            }
            artifact(sourcesJar) {
                builtBy remapSourcesJar
            }
        }
    }

    // select the repositories you want to publish to
    repositories {
        // uncomment to publish to the local maven
        // mavenLocal()
    }
}

minecraft {
    accessWidener "src/main/resources/packed.accesswidener"
}

curseforge {
    apiKey = project.hasProperty("curse_api_key") ? project.curse_api_key : "###"
    project {
        id = '403096'
        changelogType = 'markdown'
        changelog = file("changelog.md")
        releaseType = 'release'
        addGameVersion project.minecraft_version
        addGameVersion "Java 8"
        addGameVersion "Fabric"

        mainArtifact(remapJar) {
            displayName = "Packed $project.version for $project.minecraft_version"

            relations {
                requiredDependency('fabric-api')
            }
        }

        afterEvaluate {
            mainArtifact(remapJar)
            uploadTask.dependsOn(remapJar)
        }
    }

    options {
        forgeGradleIntegration = false
    }
}
